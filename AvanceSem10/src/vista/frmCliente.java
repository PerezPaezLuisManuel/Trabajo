/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import Clases.Cliente;
import Crud.CrudCliente;
import Formatos.Mensajes;
import java.awt.event.ActionEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;


public class frmCliente extends javax.swing.JInternalFrame {
ArrayList<Cliente> listaClientes = new ArrayList<>();
    /**
     * Creates new form frmCliente
     */
    public frmCliente() {
          initComponents();
    cargarDatosClientes(); // Cargar los datos al iniciar la aplicación
}

private void cargarDatosClientes() {
    CrudCliente conexionBD = new CrudCliente();
    ResultSet datosClientes = conexionBD.obtenerDatosClientes();
    DefaultTableModel modeloTabla = (DefaultTableModel) tblCLI.getModel();

    modeloTabla.setRowCount(0); // Limpiar la tabla antes de cargar nuevos datos

    try {
        while (datosClientes.next()) {
            String dni = datosClientes.getString("DNICliente");
            String nombre = datosClientes.getString("Nombre");
            String apellido = datosClientes.getString("Apellido");
            String direccion = datosClientes.getString("Direccion");
            String telefono = datosClientes.getString("Telefono");

            modeloTabla.addRow(new Object[]{dni, nombre, apellido, direccion, telefono});
        }
    } catch (SQLException ex) {
        Mensajes.M1("Error al cargar los datos de clientes en la tabla: " + ex);
    }
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtnombreCLI = new javax.swing.JTextField();
        txtApellidoCLI = new javax.swing.JTextField();
        txtDirecCLI = new javax.swing.JTextField();
        txtNumCLI = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCLI = new javax.swing.JTable();
        btnRegCLI = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtDNI = new javax.swing.JTextField();
        btnBuscarCLI = new javax.swing.JButton();
        btnBusquenaBin = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(new javax.swing.border.MatteBorder(null));
        setClosable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(53, 96, 154));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jLabel1.setText("Clientes");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 0, 230, 70));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Nombre:");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 220, 120, 60));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setText("Apellido:");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 90, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Número: ");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 470, 100, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setText("Dirección:");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 100, -1));

        txtnombreCLI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnombreCLIActionPerformed(evt);
            }
        });
        jPanel2.add(txtnombreCLI, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 230, 260, 60));

        txtApellidoCLI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoCLIActionPerformed(evt);
            }
        });
        jPanel2.add(txtApellidoCLI, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 260, 60));

        txtDirecCLI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDirecCLIActionPerformed(evt);
            }
        });
        jPanel2.add(txtDirecCLI, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 390, 260, 60));
        jPanel2.add(txtNumCLI, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 460, 260, 60));

        tblCLI.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "DNI", "Nombre", "Apellido", "Direccion", "Número"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCLI);

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 110, 570, 480));

        btnRegCLI.setBackground(new java.awt.Color(0, 0, 0));
        btnRegCLI.setForeground(new java.awt.Color(255, 255, 255));
        btnRegCLI.setText("Registrar");
        btnRegCLI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegCLIActionPerformed(evt);
            }
        });
        jPanel2.add(btnRegCLI, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 540, 180, 70));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 3, 18)); // NOI18N
        jLabel6.setText("DNI:");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 170, -1, -1));

        txtDNI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDNIActionPerformed(evt);
            }
        });
        jPanel2.add(txtDNI, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 150, 260, 60));

        btnBuscarCLI.setBackground(new java.awt.Color(0, 0, 0));
        btnBuscarCLI.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarCLI.setText("Buscar");
        btnBuscarCLI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCLIActionPerformed(evt);
            }
        });
        jPanel2.add(btnBuscarCLI, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, 170, 70));

        btnBusquenaBin.setBackground(new java.awt.Color(0, 0, 0));
        btnBusquenaBin.setForeground(new java.awt.Color(255, 255, 255));
        btnBusquenaBin.setText("BusquedaBin");
        btnBusquenaBin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBusquenaBinActionPerformed(evt);
            }
        });
        jPanel2.add(btnBusquenaBin, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 640, 170, 70));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1120, 720));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDirecCLIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDirecCLIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDirecCLIActionPerformed

    private void txtnombreCLIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnombreCLIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombreCLIActionPerformed

    private void txtApellidoCLIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoCLIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoCLIActionPerformed

    private void btnRegCLIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegCLIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRegCLIActionPerformed

    private void txtDNIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDNIActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDNIActionPerformed

    private void btnBuscarCLIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCLIActionPerformed
     // Paso 1: Obtener el DNI ingresado en el campo de búsqueda.
    String dni = txtDNI.getText();

    // Paso 2: Verificar si el campo de búsqueda no está vacío.
    if (!dni.isEmpty()) {
        // Paso 3: Realizar una consulta a la base de datos para obtener los datos del cliente con el DNI ingresado.
        CrudCliente conexionBD = new CrudCliente();
        ResultSet datosCliente = conexionBD.obtenerDatosClientePorDNI(dni);

        DefaultTableModel modeloTabla = (DefaultTableModel) tblCLI.getModel();

        // Paso 4: Limpiar la tabla antes de mostrar los nuevos datos.
        modeloTabla.setRowCount(0);

        try {
            boolean encontrado = false;

            // Paso 5: Llevar a cabo una búsqueda secuencial de clientes en la base de datos.
            while (datosCliente.next()) {
                // Paso 6: Obtener los datos del cliente.
                String nombre = datosCliente.getString("Nombre");
                String apellido = datosCliente.getString("Apellido");
                String direccion = datosCliente.getString("Direccion");
                String telefono = datosCliente.getString("Telefono");

                // Paso 7: Agregar los datos del cliente a la tabla.
                modeloTabla.addRow(new Object[]{dni, nombre, apellido, direccion, telefono});
                encontrado = true;
            }

            // Paso 8: Mostrar un mensaje si el cliente no se encuentra.
            if (!encontrado) {
                Mensajes.M1("Cliente no encontrado");
            }

            // Paso 9: Limpiar el campo de búsqueda después de mostrar los resultados.
            txtDNI.setText("");
        } catch (SQLException ex) {
            // Paso 10: Manejar errores y mostrar un mensaje de error si ocurre una excepción.
            Mensajes.M1("Error al buscar el cliente: " + ex);
        }
    }

    }//GEN-LAST:event_btnBuscarCLIActionPerformed
private Cliente buscarClientePorDNI(ArrayList<Cliente> listaClientes, String dniABuscar) {
    int left = 0;
    int right = listaClientes.size() - 1;

    while (left <= right) {
        int middle = left + (right - left) / 2;
        Cliente clienteEnMedio = listaClientes.get(middle);

        if (clienteEnMedio.getDNICliente().equals(dniABuscar)) {
            return clienteEnMedio;
        }

        if (clienteEnMedio.getDNICliente().compareTo(dniABuscar) < 0) {
            left = middle + 1;
        } else {
            right = middle - 1;
        }
    }

    return null; // Cliente no encontrado
}
    private void btnBusquenaBinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBusquenaBinActionPerformed
 // Paso 1: Obtener el DNI ingresado en el campo de búsqueda.
    String dniABuscar = txtDNI.getText();

    // Paso 2: Verificar si el campo de búsqueda no está vacío.
    if (!dniABuscar.isEmpty()) {
        // Paso 3: Realizar una consulta a la base de datos para obtener los datos del cliente por DNI.
        CrudCliente conexionBD = new CrudCliente();
        ResultSet datosCliente = conexionBD.obtenerDatosClientePorDNI(dniABuscar);

        DefaultTableModel modeloTabla = (DefaultTableModel) tblCLI.getModel();

        // Paso 4: Limpiar la tabla antes de mostrar los nuevos datos.
        modeloTabla.setRowCount(0);

        try {
            boolean encontrado = false;

            // Paso 5: Mostrar los datos del cliente si se encuentra.
            while (datosCliente.next()) {
                String dni = datosCliente.getString("DNICliente");
                String nombre = datosCliente.getString("Nombre");
                String apellido = datosCliente.getString("Apellido");
                String direccion = datosCliente.getString("Direccion");
                String telefono = datosCliente.getString("Telefono");

                // Paso 6: Agregar los datos del cliente a la tabla.
                modeloTabla.addRow(new Object[]{dni, nombre, apellido, direccion, telefono});
                encontrado = true;
            }

            // Paso 7: Mostrar un mensaje si el cliente no se encuentra.
            if (!encontrado) {
                Mensajes.M1("Cliente no encontrado");
            }

            // Paso 8: Limpiar el campo de búsqueda después de mostrar los resultados.
            txtDNI.setText("");
        } catch (SQLException ex) {
            // Paso 9: Manejar errores y mostrar un mensaje de error si ocurre una excepción.
            Mensajes.M1("Error al buscar el cliente: " + ex);
        }
    }
    }//GEN-LAST:event_btnBusquenaBinActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton btnBuscarCLI;
    public javax.swing.JButton btnBusquenaBin;
    private javax.swing.JButton btnRegCLI;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tblCLI;
    private javax.swing.JTextField txtApellidoCLI;
    public javax.swing.JTextField txtDNI;
    private javax.swing.JTextField txtDirecCLI;
    private javax.swing.JTextField txtNumCLI;
    private javax.swing.JTextField txtnombreCLI;
    // End of variables declaration//GEN-END:variables
}
