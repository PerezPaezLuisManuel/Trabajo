/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package vista;

import Clases.Producto;
import Crud.CrudProducto;
import Formatos.Mensajes;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author james
 */
public class frmProductos extends javax.swing.JInternalFrame {
    /**
     * Creates new form Pruebas
     */
    public frmProductos() {
        initComponents();
        cargarDatosProductos(); // Cargar los datos al iniciar la aplicación
   
    }

    private void cargarDatosProductos() {
        CrudProducto conexionBD = new CrudProducto();
        ResultSet datosProductos = conexionBD.obtenerDatosProductos();
        DefaultTableModel modeloTabla = (DefaultTableModel) tablita.getModel();

        modeloTabla.setRowCount(0); // Limpiar la tabla antes de cargar nuevos datos

        try {
            while (datosProductos.next()) {
                String codigo = datosProductos.getString("idProducto");
                String tipo = datosProductos.getString("tipo");
                String modelo = datosProductos.getString("modelo");
                String marca = datosProductos.getString("marca");
                String descripcion = datosProductos.getString("descripcion");

                int stock = datosProductos.getInt("stock");

                double precio = datosProductos.getDouble("precio");

                modeloTabla.addRow(new Object[]{codigo, tipo, modelo, marca, descripcion, precio, stock});
            }
        } catch (SQLException ex) {
            Mensajes.M1("Error al cargar los datos de productos en la tabla: " + ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtCodigoPro = new javax.swing.JTextField();
        txtDesPro = new javax.swing.JTextField();
        txtTipoPro = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablita = new javax.swing.JTable();
        btnBuscarPro = new javax.swing.JButton();
        btnEliminarPro = new javax.swing.JButton();
        btnAñadirPro = new javax.swing.JButton();
        txtModeloPro = new javax.swing.JTextField();
        txrMarcaPro = new javax.swing.JTextField();
        txtStockPro = new javax.swing.JTextField();
        txtPrecioPro = new javax.swing.JTextField();
        btnOrdenarPro = new javax.swing.JButton();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(53, 96, 154));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtCodigoPro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Código", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        txtCodigoPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoProActionPerformed(evt);
            }
        });
        jPanel1.add(txtCodigoPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, 200, 60));

        txtDesPro.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Descripcion", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N
        txtDesPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDesProActionPerformed(evt);
            }
        });
        jPanel1.add(txtDesPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, 440, 70));

        txtTipoPro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tipo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N
        txtTipoPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTipoProActionPerformed(evt);
            }
        });
        jPanel1.add(txtTipoPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 290, 200, 60));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 3, 48)); // NOI18N
        jLabel1.setText("PRODUCTOS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 10, 330, 80));

        tablita.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "IDPRODUCTO", "TIPO", "MODELO", "MARCA", "DESCRIPCION", "PRECIO", "STOCK"
            }
        ));
        jScrollPane1.setViewportView(tablita);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 110, 670, 430));

        btnBuscarPro.setText("Buscar");
        btnBuscarPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscarPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 470, 140, 60));

        btnEliminarPro.setText("Eliminar");
        btnEliminarPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarProActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminarPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 550, 140, 60));

        btnAñadirPro.setText("Añadir");
        btnAñadirPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAñadirProActionPerformed(evt);
            }
        });
        jPanel1.add(btnAñadirPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, 140, 60));

        txtModeloPro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Modelo", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N
        jPanel1.add(txtModeloPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 200, 60));

        txrMarcaPro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Marca", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N
        txrMarcaPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txrMarcaProActionPerformed(evt);
            }
        });
        jPanel1.add(txrMarcaPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 120, 190, 60));

        txtStockPro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Stock", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N
        jPanel1.add(txtStockPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, 190, 60));

        txtPrecioPro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Precio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 14))); // NOI18N
        txtPrecioPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioProActionPerformed(evt);
            }
        });
        jPanel1.add(txtPrecioPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 190, 60));

        btnOrdenarPro.setText("Ordenar");
        btnOrdenarPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarProActionPerformed(evt);
            }
        });
        jPanel1.add(btnOrdenarPro, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 550, 140, 60));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1175, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 676, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtDesProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDesProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDesProActionPerformed

    private void btnEliminarProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarProActionPerformed

    private void btnAñadirProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAñadirProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAñadirProActionPerformed

    private void txrMarcaProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txrMarcaProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txrMarcaProActionPerformed

    private void txtPrecioProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioProActionPerformed

    private void txtCodigoProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoProActionPerformed

    private void btnBuscarProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProActionPerformed
    // Paso 1: Se obtiene el código de producto ingresado en el campo de texto.
    String codigo = txtCodigoPro.getText();

    // Paso 2: Se verifica si el campo de búsqueda no está vacío.
    if (!codigo.isEmpty()) {
        // Paso 3: Se realiza una consulta a la base de datos para obtener los datos del producto con el código ingresado.
        CrudProducto conexionBD = new CrudProducto();
        ResultSet datosProducto = conexionBD.obtenerDatosProductoPorCodigo(codigo);

        DefaultTableModel modeloTabla = (DefaultTableModel) tablita.getModel();

        // Paso 4: Se limpia la tabla antes de mostrar los nuevos datos.
        modeloTabla.setRowCount(0);

        try {
            boolean encontrado = false;

            // Paso 5: Se lleva a cabo una búsqueda secuencial de productos en la base de datos.
            while (datosProducto.next()) {
                // Paso 6: Se obtienen los datos del producto.
                String tipo = datosProducto.getString("tipo");
                String modelo = datosProducto.getString("modelo");
                String marca = datosProducto.getString("marca");
                String descripcion = datosProducto.getString("descripcion");
                int stock = datosProducto.getInt("stock");
                double precio = datosProducto.getDouble("precio");

                // Paso 7: Se agregan los datos del producto a la tabla.
                modeloTabla.addRow(new Object[]{codigo, descripcion, tipo, modelo, marca, stock, precio});
                encontrado = true;
            }

            // Paso 8: Se muestra un mensaje si el producto no se encuentra.
            if (!encontrado) {
                Mensajes.M1("Producto no encontrado");
            }

            // Paso 9: Se limpia el campo de búsqueda después de mostrar los resultados.
            txtCodigoPro.setText("");
        } catch (SQLException ex) {
            // Paso 10: Se manejan errores y se muestra un mensaje de error si ocurre una excepción.
            Mensajes.M1("Error al buscar el producto: " + ex);
        }
    
    }
    }//GEN-LAST:event_btnBuscarProActionPerformed

    private void txtTipoProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTipoProActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoProActionPerformed

    private void btnOrdenarProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarProActionPerformed
           // Aquí se activa el evento cuando se hace clic en el botón "Ordenar"
    ordenarProductosPorPrecio();
}
private void ordenarProductosPorPrecio() {
  
    // Obtener la lista de productos desde la tabla
    DefaultTableModel modelo1 = (DefaultTableModel) tablita.getModel();
    List<Producto> listaProductos = new ArrayList<>();

    for (int i = 0; i < modelo1.getRowCount(); i++) {
        String codigo = modelo1.getValueAt(i, 0).toString();
        String tipo = modelo1.getValueAt(i, 1).toString();
        String modelo = modelo1.getValueAt(i, 2).toString();
        String marca = modelo1.getValueAt(i, 3).toString();
        String descripcion = modelo1.getValueAt(i, 4).toString();
        float precio = Float.parseFloat(modelo1.getValueAt(i, 5).toString());
        int stock = Integer.parseInt(modelo1.getValueAt(i, 6).toString());

        Producto producto = new Producto(codigo, tipo, modelo, marca, descripcion, precio, stock);
        listaProductos.add(producto);
    }

    // Llama al método de ordenación en CrudProducto
    CrudProducto crudProducto = new CrudProducto();
    crudProducto.ordenarProductosPorPrecio(listaProductos);

    // Actualiza la interfaz con la lista ordenada
    DefaultTableModel modeloOrdenado = (DefaultTableModel) tablita.getModel();
    modeloOrdenado.setRowCount(0);

    for (Producto producto : listaProductos) {
        modeloOrdenado.addRow(new Object[]{producto.getIdProducto(), producto.getTipo(), producto.getModelo(),
            producto.getMarca(), producto.getDescripcion(), producto.getPrecio(), producto.getStock()});
    }
    


    }//GEN-LAST:event_btnOrdenarProActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAñadirPro;
    private javax.swing.JButton btnBuscarPro;
    private javax.swing.JButton btnEliminarPro;
    public javax.swing.JButton btnOrdenarPro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable tablita;
    private javax.swing.JTextField txrMarcaPro;
    private javax.swing.JTextField txtCodigoPro;
    private javax.swing.JTextField txtDesPro;
    private javax.swing.JTextField txtModeloPro;
    private javax.swing.JTextField txtPrecioPro;
    private javax.swing.JTextField txtStockPro;
    public javax.swing.JTextField txtTipoPro;
    // End of variables declaration//GEN-END:variables


}